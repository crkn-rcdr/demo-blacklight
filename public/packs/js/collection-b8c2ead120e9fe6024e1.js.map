{"version":3,"file":"js/collection-b8c2ead120e9fe6024e1.js","mappings":"qoCAGU,WACF,IAAIA,EAAoBC,SAASC,eAAe,yBAC5CC,EAAyBF,SAASC,eAAe,8BACrD,GAAIF,EAAJ,CASA,IAPA,IACII,EAAc,EACZC,EAAQC,MAAMC,KAAKP,EAAkBQ,UACvCC,EAAW,GACXC,EAAQ,GACRC,EAAQ,EAEJC,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IAC7BH,EAASK,KAAKT,EAAMO,IARH,IASdD,IACCD,EAAMI,KAAKL,GACXA,EAAW,GACXE,EAAQ,GAEZA,GAAS,GAmBb,WACI,IAAMI,EAAYL,EAAMG,OAClBG,EAAsBf,SAASgB,cAAc,OAC7CC,EAAgBjB,SAASkB,KAAKC,YAAYJ,GAChDA,EAAoBK,UAAUC,IAAI,cAGlC,IADA,IAAAC,EAAA,SAAAC,GAEI,IAAMC,EAAaxB,SAASgB,cAAc,UAC1CQ,EAAWC,YAAcd,EAAI,EAC7Ba,EAAWE,iBAAiB,SAAS,WAEjCC,EADAxB,EAAcQ,GAEdiB,GACJ,IAEA1B,EAAuBiB,YAAYJ,GACnCE,EAAcE,YAAYK,EAC9B,EAXSb,EAAI,EAAGA,EAAIG,EAAYH,IAAGW,EAAAC,EAYvC,CAaAM,GACAF,EAASxB,EApEoB,CAmB7B,SAASwB,EAASG,GAUd/B,EAAkBgC,UAAY,GAC9BC,QAAQC,IAAIxB,EAAMqB,IAAM,IACII,EADJC,EAAAC,EACP3B,EAAMqB,IAAK,IAA5B,IAAAK,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA8B,KAArBC,EAAIN,EAAAO,MAAiB1C,EAAkBoB,YAAaqB,EAAK,CAAC,OAAAE,GAAAP,EAAAQ,EAAAD,EAAA,SAAAP,EAAAS,GAAA,CACnEhB,GACJ,CAuBA,SAASA,IACe5B,SAAS6C,iBAAiB,sBAClCC,SAAQ,SAACC,EAAQC,GACvBA,IAAU7C,EACZ4C,EAAO3B,UAAUC,IAAI,UAErB0B,EAAO3B,UAAU6B,OAAO,SAE5B,GACJ,CAIJ,EC1EJC,E","sources":["webpack://demo-blacklight/./app/javascript/src/modules/collection_items.js","webpack://demo-blacklight/./app/javascript/packs/collection.js"],"sourcesContent":["\r\n\r\nexport default {\r\n    init: function() {\r\n        let collectionWrapper = document.getElementById(\"collection-items-list\")\r\n        let collectionPagesWrapper = document.getElementById(\"collection-items-paginator\")\r\n        if(!collectionWrapper) return\r\n\r\n        const itemsPerPage = 18\r\n        let currentPage = 0\r\n        const items = Array.from(collectionWrapper.children)\r\n        let currPage = []\r\n        let pages = []\r\n        let count = 1\r\n\r\n        for(let i = 0; i < items.length; i++) {\r\n            currPage.push(items[i])\r\n            if(count == itemsPerPage) {\r\n                pages.push(currPage)\r\n                currPage = []\r\n                count = 0\r\n            }\r\n            count += 1\r\n        }\r\n        \r\n        function showPage(page) {\r\n            /*const startIndex = page * itemsPerPage\r\n            const endIndex = startIndex + itemsPerPage\r\n            items.forEach((item, index) => {\r\n              if (index < startIndex || index >= endIndex) {\r\n                item.style.display = \"none\"\r\n              } else {\r\n                item.style.display = \"block\"\r\n              }\r\n            })*/\r\n            collectionWrapper.innerHTML = ''\r\n            console.log(pages[page])\r\n            for (let node of pages[page]) collectionWrapper.appendChild( node )\r\n            updateActiveButtonStates()\r\n        }\r\n\r\n        function createPageButtons() {\r\n            const totalPages =pages.length\r\n            const paginationContainer = document.createElement('div')\r\n            const paginationDiv = document.body.appendChild(paginationContainer)\r\n            paginationContainer.classList.add('pagination')\r\n          \r\n            // Add page buttons\r\n            for (let i = 0; i < totalPages; i++) {\r\n                const pageButton = document.createElement('button')\r\n                pageButton.textContent = i + 1\r\n                pageButton.addEventListener('click', () => {\r\n                    currentPage = i\r\n                    showPage(currentPage)\r\n                    updateActiveButtonStates()\r\n                })\r\n        \r\n                collectionPagesWrapper.appendChild(paginationContainer)\r\n                paginationDiv.appendChild(pageButton)\r\n            }\r\n        }\r\n          \r\n        function updateActiveButtonStates() {\r\n            const pageButtons = document.querySelectorAll('.pagination button')\r\n            pageButtons.forEach((button, index) => {\r\n              if (index === currentPage) {\r\n                button.classList.add('active')\r\n              } else {\r\n                button.classList.remove('active')\r\n              }\r\n            })\r\n        }\r\n          \r\n        createPageButtons() // Call this function to create the page buttons initially\r\n        showPage(currentPage)\r\n    }\r\n}","import CollectionItems from \"../src/modules/collection_items.js\";\r\nCollectionItems.init();\r\n"],"names":["collectionWrapper","document","getElementById","collectionPagesWrapper","currentPage","items","Array","from","children","currPage","pages","count","i","length","push","totalPages","paginationContainer","createElement","paginationDiv","body","appendChild","classList","add","_loop","_i","pageButton","textContent","addEventListener","showPage","updateActiveButtonStates","createPageButtons","page","innerHTML","console","log","_step","_iterator","_createForOfIteratorHelper","s","n","done","node","value","err","e","f","querySelectorAll","forEach","button","index","remove","CollectionItems"],"sourceRoot":""}