var e={};var r=function isMergeableObject(e){return isNonNullObject(e)&&!isSpecial(e)};function isNonNullObject(e){return!!e&&"object"===typeof e}function isSpecial(e){var r=Object.prototype.toString.call(e);return"[object RegExp]"===r||"[object Date]"===r||isReactElement(e)}var t="function"===typeof Symbol&&Symbol.for;var n=t?Symbol.for("react.element"):60103;function isReactElement(e){return e.$$typeof===n}function emptyTarget(e){return Array.isArray(e)?[]:{}}function cloneUnlessOtherwiseSpecified(e,r){return false!==r.clone&&r.isMergeableObject(e)?deepmerge(emptyTarget(e),e,r):e}function defaultArrayMerge(e,r,t){return e.concat(r).map((function(e){return cloneUnlessOtherwiseSpecified(e,t)}))}function getMergeFunction(e,r){if(!r.customMerge)return deepmerge;var t=r.customMerge(e);return"function"===typeof t?t:deepmerge}function getEnumerableOwnPropertySymbols(e){return Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(e).filter((function(r){return Object.propertyIsEnumerable.call(e,r)})):[]}function getKeys(e){return Object.keys(e).concat(getEnumerableOwnPropertySymbols(e))}function propertyIsOnObject(e,r){try{return r in e}catch(e){return false}}function propertyIsUnsafe(e,r){return propertyIsOnObject(e,r)&&!(Object.hasOwnProperty.call(e,r)&&Object.propertyIsEnumerable.call(e,r))}function mergeObject(e,r,t){var n={};t.isMergeableObject(e)&&getKeys(e).forEach((function(r){n[r]=cloneUnlessOtherwiseSpecified(e[r],t)}));getKeys(r).forEach((function(c){propertyIsUnsafe(e,c)||(propertyIsOnObject(e,c)&&t.isMergeableObject(r[c])?n[c]=getMergeFunction(c,t)(e[c],r[c],t):n[c]=cloneUnlessOtherwiseSpecified(r[c],t))}));return n}function deepmerge(e,t,n){n=n||{};n.arrayMerge=n.arrayMerge||defaultArrayMerge;n.isMergeableObject=n.isMergeableObject||r;n.cloneUnlessOtherwiseSpecified=cloneUnlessOtherwiseSpecified;var c=Array.isArray(t);var o=Array.isArray(e);var a=c===o;return a?c?n.arrayMerge(e,t,n):mergeObject(e,t,n):cloneUnlessOtherwiseSpecified(t,n)}deepmerge.all=function deepmergeAll(e,r){if(!Array.isArray(e))throw new Error("first argument should be an array");return e.reduce((function(e,t){return deepmerge(e,t,r)}),{})};var c=deepmerge;e=c;var o=e;export{o as default};

