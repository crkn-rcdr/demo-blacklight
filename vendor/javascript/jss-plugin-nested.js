import e from"@babel/runtime/helpers/esm/extends";import r from"tiny-warning";var t=/\s*,\s*/g;var n=/&/g;var o=/\$([\w-]+)/g;function jssNested(){function getReplaceRef(e,t){return function(n,o){var a=e.getRule(o)||t&&t.getRule(o);if(a)return a.selector;"production"!==process.env.NODE_ENV?r(false,'[JSS] Could not find the referenced rule "'+o+'" in "'+(e.options.meta||e.toString())+'".'):void 0;return o}}function replaceParentRefs(e,r){var o=r.split(t);var a=e.split(t);var s="";for(var i=0;i<o.length;i++){var l=o[i];for(var f=0;f<a.length;f++){var u=a[f];s&&(s+=", ");s+=-1!==u.indexOf("&")?u.replace(n,l):l+" "+u}}return s}function getOptions(r,t,n){if(n)return e({},n,{index:n.index+1});var o=r.options.nestingLevel;o=void 0===o?1:o+1;var a=e({},r.options,{nestingLevel:o,index:t.indexOf(r)+1});delete a.name;return a}function onProcessStyle(r,t,n){if("style"!==t.type)return r;var a=t;var s=a.options.parent;var i;var l;for(var f in r){var u=-1!==f.indexOf("&");var v="@"===f[0];if(u||v){i=getOptions(a,s,i);if(u){var c=replaceParentRefs(f,a.selector);l||(l=getReplaceRef(s,n));c=c.replace(o,l);var d=a.key+"-"+f;"replaceRule"in s?s.replaceRule(d,r[f],e({},i,{selector:c})):s.addRule(d,r[f],e({},i,{selector:c}))}else v&&s.addRule(f,{},i).addRule(a.key,r[f],{selector:a.selector});delete r[f]}}return r}return{onProcessStyle:onProcessStyle}}export{jssNested as default};

