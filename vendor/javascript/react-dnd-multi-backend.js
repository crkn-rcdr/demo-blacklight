import{MultiBackend as e}from"dnd-multi-backend";export*from"dnd-multi-backend";import r,{createContext as t,useState as n,useContext as d,useEffect as i}from"react";import{DndProvider as o,DndContext as l,useDrag as u,useDrop as c}from"react-dnd";import{createPortal as v}from"react-dom";import{Preview as s,Context as m,usePreview as f}from"react-dnd-preview";export{Context as PreviewContext}from"react-dnd-preview";var k=t(null),g=({portal:t,...d})=>{let[i,l]=n(null);return r.createElement(k.Provider,{value:t??i},r.createElement(o,{backend:e,...d}),t?null:r.createElement("div",{ref:l}))};var p=()=>{let[e,r]=n(!1),t=d(l);return i((()=>{let e=t?.dragDropManager?.getBackend(),n={backendChanged:e=>{r(e.previewEnabled())}};return r(e.previewEnabled()),e.previewsList().register(n),()=>{e.previewsList().unregister(n)}}),[t,t.dragDropManager]),e};var E=e=>{let t=p(),n=d(k);if(!t)return null;let i=r.createElement(s,{...e});return null!==n?v(i,n):i};E.Context=m;var R=(e,r,t,n)=>{let d=t.getBackend();t.receiveBackend(n);let i=r(e);return t.receiveBackend(d),i},a=(e,r)=>{let t=d(l),n=t?.dragDropManager?.getBackend();if(void 0===n)throw new Error("could not find backend, make sure you are using a <DndProvider />");let i=r(e),o={},u=n.backendsList();for(let n of u)o[n.id]=R(e,r,t.dragDropManager,n.instance);return[i,o]};var pe=e=>a(e,u);var le=e=>a(e,c);var Se=()=>{let e=p(),r=f();return e?r:{display:!1}};export{g as DndProvider,E as Preview,pe as useMultiDrag,le as useMultiDrop,Se as usePreview};

